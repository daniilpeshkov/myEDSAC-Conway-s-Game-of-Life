				[Conway's Game of Life]
				[Watch in Long Tank 30]
				[initial orders 1]
			[short]
			[distAddr 1023]
			[k 1022]
			[sourceAddr 1021]
			[curFieldAddr 1023]
			[curTmpBufferDistAddr 1000]
			[subRetAddr 1004]
			[horK 1005]
			[neighborK 998]
			[tempK 999]
			
			[long] 
			[const7Llo 1018]	
			[const1ooLlo 1016]
			[const1ooLHi 1017]
			[tmp 1002]
			[constoo1lo 1014]
			[shiftReg 996]
			[curLine 1008]
			[curAboveLine 1010]
			[curUnderLine 1006]
			[newLine 994]
				

[31]					T 303 S []
	[load constants that must be at even addresses]
[32]					A 237 S		[acc = 7]
[33]					T 1018 S	[transfer acc to 1018]
[34]					A 249 S		[acc = 1000... in binary]
[35]					T 1017 S  	[transfer acc to 1017]
[36]					A 230 S		[acc = 1]
[37]					T 1014 S	[transfer acc to 1014]
		[now in Long addresses:]
		[1018 we have 7]
		[1016 we have leading 1 followed by zeroes]
		[1014 we have 1]
[38]					T 0    S		[acc = 0]
		[initial data load loop]
[39]					A 252  S		[acc = first input word address]	
[40]					T 1021 S		[load acc to sourceAddr]
[41]					A 250  S		[acc = field start address]
[42]					T 1023 S		[load acc to distAddr]
[43]					A 234  S		[acc = 31]
[44] [initLoop:]		T 1022 S		[load acc to k]
[45]					A 1021 S		[acc = sourceAddr]
[46]					L 0 L			[lshift acc]
[47]					A 240  S		[acc += A0S]
[48]					T 53   S		[transfer acc to initLoopA]
[49]					A 1023 S		[acc = distAddr]
[50]					L 0 L			[lshift acc]
[51]					A 241  S		[acc += T0S]
[52]					T 54   S		[transfer acc to initLoopT]
[53] [initLoopA:]		A 0    S		[acc = word at sourceAddr]
[54] [initLoopT:]		T 0    S		[transfer acc to distAddr]
[55]					A 1023 S		[acc = distAddr]
[56]					A 230  S		[acc += 1]
[57]					T 1023 S		[transfer acc to distAddr]
[58]					A 1021 S		[acc = sourceAddr]
[59]					A 230  S		[acc += 1]
[60]					T 1021 S		[transfer acc to sourceAddr]
[61]					A 1022 S		[acc = k]
[62]					S 230  S		[acc -= 1]
[63->44]				E 44   S		[if k < 0 goto 44]
		[main update loop]
[64] [update:]			Z 0    S		[wait for reset]
[65]					T 0    L		[acc = 0]
[66]					A 960  L		[----------------------------]
[67]					T 992  L		[copy lowest line above field]
[68]					A 990  L		[and higher line under field]
[69]					T 958  L		[----------------------------]
[70]					A 250  S		[acc = field address]
[71]					T 1023 S		[transfer acc to curFieldAddr]
										[curFieldAddr - address of cur iterrating line]
[72]					A 251  S		[acc = field buffer address]
[73]					T 1000 S		[transfer acc to curTmpBufferDistAddr]
[74]					A 233  S		[acc = 15]
[75] [fieldTraversal:]	T 1022 S		[transfer acc to k]
[76]					A 1023 S		[acc = curFieldAddr]
[77]					S 231  S		[acc -= 2]
[78]					L 0    L		[lshift acc]
[79]					A 242  S		[acc += A0L]
		[acc = A curUnderLine L]
[80]					U 93   S		[transfer acc to curUnderLineA]		
[81]					A 236  S		[acc += 4]
		[acc = A curLine L]
[82]					U 89   S		[transfer acc to curLineA]
[83]					A 236  S		[acc += 4]
		[acc = A curAboveLine L]
[84]					T 91   S		[transfer acc to curAboveLineA]
[85]					A 1000 S		[acc = curTmpBufferDistAddr]
[86]					L 0 L
[87]					A 243  S		[acc += T0L]
		[acc = T curTmpBufferDistAddr L]
[88]					T 189  S		[transfer acc to writeToNew]
[89] [curLineA:]		A 0    L		[acc = field current line]
[90]					T 1008 L		[transfer acc to curLine]
[91] [curAboveLineA]	A 0    L		[acc = field next line]
[92]					T 1010 L		[transfer acc to curAboveLine]
[93] [curUnderLineA:]	A 0    L		[acc = field prev line]
[94]					T 1006 L		[transfer acc to curUnderLine]
[95]					A 235  S		[acc = 34]
[96] [horLoop:]			T 1005 S		[transfer acc to horK]
[97]					A 1010 L		[acc = curAboveLine]
[98]					T 996  L		[transfer acc to shiftReg]
[99]					A 245  S		[acc = ret1Addr]
[100]					U 1004 S		[transfer acc to subRetAddr]
[101]					E 285  S		[goto shiftSub]
[102] [ret1:]			T 0    L
[103]					A 996  L		[acc = shiftReg]
[104]					T 1010 L		[transfer acc to curAboveLine]
[105]					A 1008 L		[acc = curLine]
[106]					T 996  L		[transfer acc to shiftReg]
[107]					A 246  S		[acc = ret2Addr]
[======]
[108]					U 1004 S		[sav to subRetAddr]
[109]					E 285  S		[goto shiftSub]
[110] [ret2:]			T 0    L		[clear acc]
[111]					A 996  L		[acc = shifted line]
[112]					T 1008 L		[sav to curLine]
[113]					A 1006 L		[acc = curUnderLine]
[114]					T 996  L		[sav to shiftReg]
[115]					A 247  S		[acc = ret3Addr]
[116]					U 1004 S		[sav to subRetAddr]
[117]					E 285  S		[goto shiftSub]
[118] [ret3:]			T 0    L		[clear acc]
[119]					A 996  L		[acc = shifted line]
[120]					T 1006 L		[sav to curUnderLine]
		[count neighbors]
[121]					H 237  S		[mult = 7]
[122]					C 1010 S		[collacate with curAboveLine]
[123]					L 2 S			[acc <<= 3]
[124]					T 1002 S		[sav to tmp]
[125]					C 1006 S		[collacate with curUnderLine]
[126]					A 1002 S		[acc += tmp]
[127]					L 2 S			[acc <<= 3]
[128]					T 1002 S		[sav to tmp]
[129]					H 238 S			[mult = 5]
[130]					C 1008 S		[collacate with curLine]
[131]					A 1002 S		[acc += tmp]
[132]					T 1002 S		[sav to tmp]
[133]					T 0 S			[clear acc]
[134]					T 998 S			[clear neighborK]
[135]					H 230 S			[mult = 1]
[136]					A 239 S			[acc = 8]
[137] [countNeighLoop:]	T 999 S			[sav to tempK]
[138]					C 1002 S		[collacate with tmp]
[139]					A 998 S			[acc += neighborK]
[140]					T 998 S			[sav to neighborK]
[141]					A 1002 S		[acc = tmp]
[142]					R 0 L			[acc >>= 1]
[143]					T 1002 S		[sav to tmp]
[144]					A 999 S			[acc = tempK]
[145]					S 230 S			[acc -= 1]
[146]					E 137 S			[goto countNeighLoop if tempK < 0]
[147]					T 0 S			[clear acc]
		[write 0 or 1 (next state of cur cell)]
[148]					H 231 S			[mult = 2]
[149]					C 1008 S		[collacate with curLine]
[150]					S 231 S			[acc -= 2 to detect 1 or 0 there]
[151]					E 159 S			[if acc >= 0 goto alive]
[152]					T 0 S 			[clear acc]
		[if cur cell dead]
[153]					A 998 S			[acc = neighborK]
[154]					S 232 S			[acc -= 2]
[155]					G 172 S			[if neighborK < 2 goto write0]
[156]					S 230 S			[acc -= 2]
[157]					G 165 S			[if neighborK == 3 goto write1]
[158]					E 172 S			[goto write0]

		[if cur cell alive]
[159]					T 0 S			[clear acc]
[160]					A 998 S			[acc = neighborK]
[161]					S 231 S			[acc -= 2]
[162]					G 172 S			[if neighborK < 2 goto write0]
[163]					S 231 S			[acc -= 2]
[164]					E 172 S			[if neighborK > 3 goto write0]
		
[165] [write1:]			T 0 L			[clear acc]
[166]					A 994 L			[acc = newLine]
[167]					L 0 L			[acc <<= 1]
[168]					A 1014 L		[acc += 1]
[169]					T 994 L			[sav to newLine]
[170]					A 230 S			[acc = 1]
[171]					E 176 S			[goto f]
[172] [write0:]			T 0 L			[clear acc]
[173]					A 994 L			[acc = newLine]
[174]					L 0 L			[acc <<= 1]
[175]					T 994 L			[sav to newLine]
[176] [f:]				T 0 L			[clear acc]
		[check horLoop]
[177]					A 1005 S		[acc = horK]
[178]					S 230 S			[acc -= 1]
[179]					E 96 S			[if horK >= 0 goto horLoop]
[180]					T 0 S			[clear acc]
		[prepare completed line]
[181]					A 994 L			[acc = newLine]
[182]					T 996 L			[sav to shiftReg]
[183]					A 248 S			[acc = ret4Addr]
[184]					U 1004 S		[sav to subRetAddr]
[185]					E 285 S			[goto shiftSub]
[186] [ret4:]			T 0 S			[clear acc]
[187]					T 994 L			[clear newLine]
[188]					A 996 L			[acc = completed new line]
[189] [writeToNew:]		T 0 L			[write to tmp field buffer]
		[check vertical loop]
[190]					A 1023 S		[acc = curFieldAddr]
[191]					A 231 S			[acc += 2]
[192]					T 1023 S		[sav to curFieldAddr]
[193]					A 1000 S		[acc = curTmpBufferDistAddr]
[194]					A 231 S			[acc += 2]
[195]					T 1000 S		[sav to curTmpBufferDistAddr]
[196]					A 1022 S		[acc = k]		
[197]					S 230 S			[acc -= 1]
[198]					E 75 S			[if k >= 0 goto fieldTraversal]
[199]					T 0 S			[clear acc]
		[copy buffer to the field]
[200]					A 251 S			[acc = fieldBuffAddr]
[201]					T 1021 S		[sav to sourceAddr]
[202]					A 250 S			[acc = fieldAddr]
[203]					T 1023 S		[sav to distAddr]
[204]					A 233 S			[acc = 15]
[205] [transferLoop:]	T 1022 S		[sav to k]
[206]					A 1021 S		[acc = sourceAddr]
[207]					L 0 L			[acc <<= 1]
[208]					A 242 S			[acc += A0L]
[209]					T 214 S			[sav to transferA]
[210]					A 1023 S		[acc = distAddr]
[211]					L 0 L			[acc <<= 1]
[212]					A 243 S			[acc += T0L]
[213]					T 215 S			[sav to transferT]
[214] [transferA:]		A 0 L			[copy from tmp buffer]	
[215] [transferT:]		T 0 L			[sav to field
[216]					A 1023 S		[acc = distAddr]
[217]					A 231 S			[acc += 2]
[218]					T 1023 S		[sav to distAddr]
[219]					A 1021 S		[acc = sourceAddr]
[220]					A 231 S			[acc += 2]
[221]					T 1021 S		[sav to sourceAddr]
[222]					A 1022 S		[acc = k]
[223]					S 230 S			[acc -= 1]
[224]					E 205 S			[if k >= 0 goto transferLoop]
[225]					T 0 L			[clear acc]
[226]					A 230 S			[acc = 1]
[227]					E 64 S			[goto update (infinite loop)]
[228]					Z 0 S			[end of main program. unreachable order]
[229] [0:]				P 0 S
[230] [1:]				P 0 L
[231] [2:]				P 1 S
[232] [3:]				P 1 L
[233] [15:]				P 7 L
[234] [31:]				P 15 L
[235] [34:]				P 17 S
[236] [4:]				P 2 S
[237] [7:]				P 3 L
[238] [5:]				P 2 L
[239] [8:]				P 4 S
[240] [A0S:]			A 0 S
[241] [T0S:]			T 0 S
[242] [A0L:]			A 0 L
[243] [T0L:]			T 0 L
[244] [E0S:]			E 0 S
[245] [ret1Addr:]		P 51 S [102]
[246] [ret2Addr:]		P 55 S [110]
[247] [ret3Addr:]		P 59 S [118]
[248] [ret4Addr:]		P 93 S [186]
[249] [1oo:]			. 0 S
[250] [fieldAddr:]		P 480 S [960]
[251] [fieldBuffAddr:]	P 448 S [896]
[252] [inDataAddr:]		P 126 L [253]
		[input data]
[253] 					P 0 S
[254]					P 0 S
[255]					K 0 S
[256]					P 0 S
[257]					U 0 S
[258]					P 0 S
[259]					P 0 S
[260]					P 0 S
[261]					P 0 S
[262]					P 0 S
[263]					P 0 S
[264]					R 0 S
[265]					P 0 S
[266]					J 0 S
[267]					P 0 S
[268]					R 0 S
[269]					P 0 S
[270]					P 0 S
[271]					P 240 S
[272]					P 0 S
[273]					P 360 S
[274]					P 240 S
[275]					P 408 S
[276]					P 136 S
[277]					I 408 S
[278]					R 128 S
[279]					I 360 S
[280]					I 72 S
[281]					I 240 S
[282]					K 0 S
[283]					P 0 S
[284]					P 0 S
		[end of input data]
		
[285]					H 1016 L		[mult = long 1000...]
[286]					C 996 L			[collacate with shiftReg]
[287]					R 0 S			[shift sign bit]
[288]					R 0 S			[to the right]
[289]					R 4 S
[290]					T 1002 L		[sav to tmp]
[291]					H 1014 L		[mult = long 1]
[292]					C 1002 L		[collacate with tmp]
[293]					T 1002 L		[sav to tmp]
[294]					A 996 L			[acc = shiftReg]
[295]					L 0 L			[acc <<= 1]
[296]					A 1002 L		[acc += tmp]
[297]					T 996 L			[sav to shiftReg]
[298]					A 1004 S		[acc = subRetAddr]
[299]					L 0 L			[acc <<= 1]
[300]					A 244 S			[acc += E0S]
[301]					T 302 S			[sav to retE]
[302] [retE:]			E 0 S			[return link]

